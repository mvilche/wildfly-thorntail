    ##comienzo Template
  apiVersion: v1
  kind: Template
  metadata:
    name: wildlfy-thorntail-s2i-qa-mvilche
    labels:
      template: wildlfy-thorntail-s2i-qa-mvilche
      autor: "Martin_Fabrizzio_Vilche"
    annotations:
      openshift.io/display-name: "wildlfy-thorntail-s2i-qa"
      iconClass: "icon-wildfly"
      description: >-
        Compilador de imagenes para microservicios basados en java 11 y maven 3.6.0
        Martin Fabrizzio Vilche.
        https://github.com/mvilche.

  objects:


  - apiVersion: v1
    data:
      app.yaml: |-
        swarm:
          deployment:
            example-jaas-basic.war:
              web:
                login-config:
                  auth-method: BASIC
                  security-domain: my-domain
                security-constraints:
                  - url-pattern: /*
                    methods: [GET]
                    roles: [admin, user]
          security:
            security-domains:
              my-domain:
                classic-authentication:
                  login-modules:
                    Database:
                      code: Database
                      flag: required
                      module-options:
                        dsJndiName: java:jboss/datasources/MyDS
                        principalsQuery: SELECT password FROM REST_DB_ACCESS WHERE name=?
                        rolesQuery: SELECT role, 'Roles' FROM REST_DB_ACCESS WHERE name=?
          datasources:
            data-sources:
              MyDS:
                driver-name: h2
                connection-url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
                user-name: sa
                password: sa
    kind: ConfigMap
    metadata:
      name: ${APP_NAME}-project-defaults




  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}"
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: wildfly-thorntail-s2i
        deploymentconfig: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: wildfly-thorntail-s2i
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - env:
                - name: APP_OPTIONS
                  value: '-s /opt/config/app.yaml'
                - name: JAVA_OPTS
                  value: ${JAVA_OPTS}
                - name: TIMEZONE
                  value: America/Montevideo
              image: "${APP_NAME}:latest"
              imagePullPolicy: Always
              name: ${APP_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8778
                  protocolo: TCP
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:              
              - name: ${APP_NAME}-project-defaults
                mountPath: /opt/config             
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 10
          volumes:
          - name: ${APP_NAME}-project-defaults
            configMap:
              name: ${APP_NAME}-project-defaults          
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:latest"
          type: ImageChange


  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: wildfly-thorntail-s2i
      name: ${APP_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: jolokia
          port: 8778
          protocol: TCP
          targetPort: 8778
      selector:
        app: wildfly-thorntail-s2i
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP


  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: wildfly-thorntail-s2i
      name: ${APP_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: wildfly-thorntail-s2i
      name: ${APP_NAME}
    spec: {}


  parameters:
    - name: APP_NAME
      displayName: Nombre del microservicio
      value: ''
      required: true
    - name: JAVA_OPTS
      displayName: Parametros jvm para el inicio del microservicio
      value: ""    

