#!/bin/bash -e
#
# S2I assemble script for the 's2i-maven-java' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

set -e


shopt -u dotglob


if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

if [ ! -f /tmp/src/pom.xml ]; then
  echo "FATAL - No pom.xml found"
  exit 1
fi


if [ -d /tmp/artifacts/.m2 ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/.m2 /home/s2i/
fi

echo "---> INSTALANDO CODIGO FUENTE..." 
mkdir /opt/src
cp -Rf /tmp/src/* /opt/src/

if [ -z "$TAG_VERSION" ]; then
  echo "NO VARIABLE TAG_VERSION ENCONTRADA USANDO latest"
else

echo "VARIABLE TAG_VERSION ENCONTRADA USANDO: $TAG_VERSION"
echo $TAG_VERSION > /opt/version
fi


if [ -z "$NEXUS_MIRROR_URL" ]; then
echo "NO NEXUS_MIRROR_URL ENCONTRADO"
else
echo "NEXUS_MIRROR_URL ENCONTRADO - AGREGANDO REPOSITORIO"

if [ ! -d /home/s2i/.m2 ]; then
  mkdir /home/s2i/.m2
  touch /home/s2i/.m2/settings.xml
fi
cat << EOF > /home/s2i/.m2/settings.xml
<?xml version="1.0" encoding="UTF-8"?>
<settings>
  <mirrors>
    <mirror>
      <id>central</id>
      <name>central</name>
      <url>$NEXUS_MIRROR_URL</url>
      <mirrorOf>*</mirrorOf>
    </mirror>
  </mirrors>
</settings>
EOF
fi



if [ -z "$EXTRA_REPO" ]; then
echo "NO EXTRA_REPO ENCONTRADO"
else
echo "EXTRA_REPO ENCONTRADO - COMPILANDO REPOSITORIO ADICIONAL.."
mkdir /opt/extra_repo && cd /opt/extra_repo && \
git clone $EXTRA_REPO . && \
mvn clean install -Dfile.encoding=UTF-8 -DskipTests=true ${MVN_OPTS}

ERR=$?
    if [ $ERR -ne 0 ]; then
 echo "LA COMPILACION SALIO CON CODIGO DE ERROR $ERR"
exit $ERR
fi

echo "COMPILADO EXTRA_REPO FINALIZADO - LIMPIANDO DIRECTORIOS.." && rm -rf /opt/extra_repo 
fi

echo "---> COMPILANDO CODIGO FUENTE..."

if [ ! -z "$MVN_OPTS_COMMAND" ]; then
echo "MVN_OPTS_COMMAND ENCONTRADO"
echo "EJECUTANDO:" $MVN_OPTS_COMMAND
cd /opt/src && $MVN_OPTS_COMMAND
ERR=$?
    if [ $ERR -ne 0 ]; then
echo "LA COMPILACION SALIO CON CODIGO DE ERROR $ERR"
exit $ERR
else

echo "MVN_OPTS_COMMAND NO ENCONTRADO - UTILIZANDO VALORES POR DEFECTO PARA LA COMPILACION: "
echo "mvn clean package -Dfile.encoding=UTF-8 -DskipTests=true"
cd /opt/src && mvn clean package -Dfile.encoding=UTF-8 -DskipTests=true

ERR=$?
    if [ $ERR -ne 0 ]; then
echo "LA COMPILACION SALIO CON CODIGO DE ERROR $ERR"
exit $ERR

fi
fi

echo "---> COPIANDO APLICACION GENERADA AL DIRECTORIO DE DEPLOY..."
find . -name '*-thorntail.jar' | xargs cp -t . || find . -name '*-swarm.jar' | xargs cp -t . && mv *.jar /opt/app-root/app.jar && echo "APP INSTALADA!"
